{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf4 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classNames2 = _interopRequireDefault(require(\"../../lib/classNames\"));\n\nvar _getClassName = _interopRequireDefault(require(\"../../helpers/getClassName\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar isElement = function isElement(element) {\n  return _react.default.isValidElement(element);\n};\n\nvar isDOMTypeElement = function isDOMTypeElement(element) {\n  return isElement(element) && typeof element.type === 'string';\n};\n\nvar baseClassName = (0, _getClassName.default)('Tooltip');\n\nvar TooltipPortal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(TooltipPortal, _React$Component);\n\n  function TooltipPortal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, TooltipPortal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf4.default)(TooltipPortal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n      x: 0,\n      y: 0\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"fixedPortal\", false);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"portalTarget\", _this.findPortalTarget());\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"getRef\", function (el) {\n      return _this.el = el;\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(TooltipPortal, [{\n    key: \"findPortalTarget\",\n    value: function findPortalTarget() {\n      var target = this.props.target;\n      var closestFixed = target.closest('.FixedLayout');\n      var closestHeader = target.closest('.PanelHeader__in');\n      var closestPanel = this.document.getElementById(this.context.panel).childNodes[0];\n\n      if (closestFixed || closestHeader) {\n        this.fixedPortal = true;\n      }\n\n      return closestFixed || closestHeader || closestPanel;\n    }\n  }, {\n    key: \"getBoundingTargetRect\",\n    value: function getBoundingTargetRect() {\n      var target = this.props.target;\n      var targetBounds = target.getBoundingClientRect();\n      var portalBounds = this.portalTarget.getBoundingClientRect();\n      return {\n        width: targetBounds.width,\n        height: targetBounds.height,\n        x: targetBounds.left - portalBounds.left,\n        y: targetBounds.top - portalBounds.top\n      };\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.document.removeEventListener('click', this.props.onClose);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          offsetY = _this$props.offsetY,\n          offsetX = _this$props.offsetX,\n          alignX = _this$props.alignX,\n          alignY = _this$props.alignY;\n      var coords = this.getBoundingTargetRect();\n      this.document.addEventListener('click', this.props.onClose);\n      this.setState({\n        x: coords.x + offsetX + (alignX === 'right' ? coords.width - this.el.offsetWidth : 0),\n        y: coords.y + (alignY === 'top' ? -this.el.offsetHeight - offsetY : coords.height + offsetY)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$props2 = this.props,\n          title = _this$props2.title,\n          text = _this$props2.text,\n          alignX = _this$props2.alignX,\n          alignY = _this$props2.alignY,\n          cornerOffset = _this$props2.cornerOffset;\n      return _reactDom.default.createPortal(_react.default.createElement(\"div\", {\n        className: (0, _classNames2.default)(baseClassName, (_classNames = {}, (0, _defineProperty2.default)(_classNames, \"Tooltip--x-\".concat(alignX), true), (0, _defineProperty2.default)(_classNames, \"Tooltip--y-\".concat(alignY), true), (0, _defineProperty2.default)(_classNames, 'Tooltip--fixed', this.fixedPortal), _classNames))\n      }, _react.default.createElement(\"div\", {\n        className: \"Tooltip__container\",\n        style: {\n          top: this.state.y,\n          left: this.state.x\n        },\n        ref: this.getRef\n      }, _react.default.createElement(\"div\", {\n        className: \"Tooltip__corner\",\n        style: (0, _defineProperty2.default)({}, alignX, 20 + cornerOffset)\n      }), _react.default.createElement(\"div\", {\n        className: \"Tooltip__content\"\n      }, title && _react.default.createElement(\"div\", {\n        className: \"Tooltip__title\"\n      }, title), text && _react.default.createElement(\"div\", {\n        className: \"Tooltip__text\"\n      }, text)))), this.portalTarget);\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.context.document || document;\n    }\n  }]);\n  return TooltipPortal;\n}(_react.default.Component);\n\n(0, _defineProperty2.default)(TooltipPortal, \"propTypes\", {\n  target: _propTypes.default.object,\n  text: _propTypes.default.node,\n  title: _propTypes.default.node,\n  alignX: _propTypes.default.oneOf(['left', 'right']),\n  alignY: _propTypes.default.oneOf(['top', 'bottom']),\n  offsetX: _propTypes.default.number,\n  offsetY: _propTypes.default.number,\n  cornerOffset: _propTypes.default.number,\n  onClose: _propTypes.default.func.isRequired\n});\n(0, _defineProperty2.default)(TooltipPortal, \"contextTypes\", {\n  document: _propTypes.default.any,\n  panel: _propTypes.default.string\n});\n\nvar Tooltip =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  (0, _inherits2.default)(Tooltip, _React$Component2);\n\n  function Tooltip() {\n    var _getPrototypeOf3;\n\n    var _this2;\n\n    (0, _classCallCheck2.default)(this, Tooltip);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf3 = (0, _getPrototypeOf4.default)(Tooltip)).call.apply(_getPrototypeOf3, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this2), \"state\", {\n      ready: false\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this2), \"getRef\", function (el) {\n      return _this2.targetEl = el;\n    });\n    return _this2;\n  }\n\n  (0, _createClass2.default)(Tooltip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.targetEl && this.setState({\n        ready: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$cloneElement;\n\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          isShown = _this$props3.isShown,\n          portalProps = (0, _objectWithoutProperties2.default)(_this$props3, [\"children\", \"isShown\"]);\n\n      var child = _react.default.cloneElement(children, (_React$cloneElement = {}, (0, _defineProperty2.default)(_React$cloneElement, isDOMTypeElement(children) ? 'ref' : 'getRootRef', this.getRef), (0, _defineProperty2.default)(_React$cloneElement, \"key\", 'c'), _React$cloneElement));\n\n      if (!isShown || !this.state.ready) {\n        return child;\n      }\n\n      return [child, _react.default.createElement(TooltipPortal, (0, _extends2.default)({}, portalProps, {\n        target: this.targetEl,\n        key: \"t\"\n      }))];\n    }\n  }]);\n  return Tooltip;\n}(_react.default.Component);\n\nexports.default = Tooltip;\n(0, _defineProperty2.default)(Tooltip, \"propTypes\", {\n  /**\n   * **Важно**: если в `children` передан React-компонент, то необходимо убедиться в том, что он поддерживает\n   * свойство `getRootRef`, которое должно возвращаться ссылку на корневой DOM-элемент компонента,\n   * иначе тултип показан не будет. Если передан React-element, то такой проблемы нет.\n   */\n  children: _propTypes.default.node.isRequired,\n\n  /**\n   * Если передан `false`, то рисуется просто `children`.\n   */\n  isShown: _propTypes.default.bool.isRequired,\n\n  /**\n   * Текст тултипа.\n   */\n  text: _propTypes.default.node,\n\n  /**\n   * Заголовок тултипа.\n   */\n  title: _propTypes.default.node,\n\n  /**\n   * Положение по горизонтали (прижатие к левому или правому краю `children`).\n   */\n  alignX: _propTypes.default.oneOf(['left', 'right']),\n\n  /**\n   * Положение по вертикали (расположение над или под `children`).\n   */\n  alignY: _propTypes.default.oneOf(['top', 'bottom']),\n\n  /**\n   * Сдвиг по горизонтали (относительно портала, в котором рисуется тултип).\n   */\n  offsetX: _propTypes.default.number,\n\n  /**\n   * Сдвиг по вертикали (относительно портала, в котором рисуется тултип).\n   */\n  offsetY: _propTypes.default.number,\n\n  /**\n   * Сдвиг треугольника (относительно ширины тултипа).\n   */\n  cornerOffset: _propTypes.default.number,\n\n  /**\n   * Callback, который вызывается при клике по любому месту в пределах экрана.\n   */\n  onClose: _propTypes.default.func.isRequired\n});\n(0, _defineProperty2.default)(Tooltip, \"defaultProps\", {\n  offsetX: 0,\n  offsetY: 15,\n  alignX: 'left',\n  alignY: 'bottom',\n  cornerOffset: 0,\n  isShown: true\n});","map":null,"metadata":{},"sourceType":"script"}