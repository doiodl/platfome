{"ast":null,"code":"import _slicedToArray from \"/Users/timurzajnullin/Desktop/translation_web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/timurzajnullin/Desktop/translation_web/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n  const _useState = useState('home'),\n        _useState2 = _slicedToArray(_useState, 2),\n        activePanel = _useState2[0],\n        setActivePanel = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        fetchedUser = _useState4[0],\n        setUser = _useState4[1]; // const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\n  useEffect(() => {\n    connect.subscribe(({\n      detail: {\n        type,\n        data\n      }\n    }) => {\n      if (type === 'VKWebAppUpdateConfig') {\n        const schemeAttribute = document.createAttribute('scheme');\n        schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n\n    async function fetchData() {\n      const user = await connect.sendPromise('VKWebAppGetUserInfo');\n      setUser(user);\n      setPopout(null);\n    }\n\n    fetchData();\n  }, []);\n\n  const go = e => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return React.createElement(View, {\n    activePanel: activePanel,\n    popout: popout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Home, {\n    id: \"home\",\n    fetchedUser: fetchedUser,\n    go: go,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Persik, {\n    id: \"persik\",\n    go: go,\n    fetchedUser: fetchedUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/timurzajnullin/Desktop/translation_web/src/App.js"],"names":["React","useState","useEffect","connect","View","ScreenSpinner","Home","Persik","App","activePanel","setActivePanel","fetchedUser","setUser","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","user","sendPromise","setPopout","go","e","currentTarget","dataset","to","popout"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,2CAAjB;AACA,OAAOC,aAAP,MAA0B,6DAA1B;AACA,OAAO,+BAAP;AAEA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACqBP,QAAQ,CAAC,MAAD,CAD7B;AAAA;AAAA,QACVQ,WADU;AAAA,QACGC,cADH;;AAAA,qBAEcT,QAAQ,CAAC,IAAD,CAFtB;AAAA;AAAA,QAEVU,WAFU;AAAA,QAEGC,OAFH,kBAGjB;;;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACfC,IAAAA,OAAO,CAACU,SAAR,CAAkB,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AAAV,KAAD,KAA+B;AAChD,UAAID,IAAI,KAAK,sBAAb,EAAqC;AACpC,cAAME,eAAe,GAAGC,QAAQ,CAACC,eAAT,CAAyB,QAAzB,CAAxB;AACAF,QAAAA,eAAe,CAACG,KAAhB,GAAwBJ,IAAI,CAACK,MAAL,GAAcL,IAAI,CAACK,MAAnB,GAA4B,cAApD;AACAH,QAAAA,QAAQ,CAACI,IAAT,CAAcC,UAAd,CAAyBC,YAAzB,CAAsCP,eAAtC;AACA;AACD,KAND;;AAOA,mBAAeQ,SAAf,GAA2B;AAC1B,YAAMC,IAAI,GAAG,MAAMvB,OAAO,CAACwB,WAAR,CAAoB,qBAApB,CAAnB;AACAf,MAAAA,OAAO,CAACc,IAAD,CAAP;AACAE,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA;;AACDH,IAAAA,SAAS;AACT,GAdQ,EAcN,EAdM,CAAT;;AAgBA,QAAMI,EAAE,GAAGC,CAAC,IAAI;AACfpB,IAAAA,cAAc,CAACoB,CAAC,CAACC,aAAF,CAAgBC,OAAhB,CAAwBC,EAAzB,CAAd;AACA,GAFD;;AAGA,SACC,oBAAC,IAAD;AAAM,IAAA,WAAW,EAAExB,WAAnB;AAAgC,IAAA,MAAM,EAAEyB,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,MAAT;AAAgB,IAAA,WAAW,EAAEvB,WAA7B;AAA0C,IAAA,EAAE,EAAEkB,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,QAAX;AAAoB,IAAA,EAAE,EAAEA,EAAxB;AAA4B,IAAA,WAAW,EAAElB,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD;AAMA,CA9BD;;AAgCA,eAAeH,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\t// const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} fetchedUser={fetchedUser} />\n\t\t</View>\n\t);\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}