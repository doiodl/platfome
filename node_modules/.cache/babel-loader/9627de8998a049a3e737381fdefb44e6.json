{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _withPlatform = _interopRequireDefault(require(\"../../hoc/withPlatform\"));\n\nvar _FixedLayout = _interopRequireDefault(require(\"../FixedLayout/FixedLayout\"));\n\nvar _Touch = _interopRequireDefault(require(\"../Touch/Touch\"));\n\nvar _classNames = _interopRequireDefault(require(\"../../lib/classNames\"));\n\nvar _getClassName = _interopRequireDefault(require(\"../../helpers/getClassName\"));\n\nvar _dom = require(\"../../lib/dom\");\n\nvar _transitionEvents = _interopRequireDefault(require(\"../../lib/transitionEvents\"));\n\nvar _platform = require(\"../../lib/platform\");\n\nvar _touch = require(\"../../lib/touch\");\n\nvar Snackbar =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  (0, _inherits2.default)(Snackbar, _PureComponent);\n\n  function Snackbar(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Snackbar);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Snackbar).call(this, props));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"innerEl\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"bodyElRef\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"closeTimeout\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"shiftXPercent\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"shiftXCurrent\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"touchStartTime\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"animationFrame\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"setCloseTimeout\", function () {\n      if (_dom.canUseDOM) {\n        _this.closeTimeout = window.setTimeout(function () {\n          _this.close();\n        }, _this.props.duration);\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"clearCloseTimeout\", function () {\n      clearTimeout(_this.closeTimeout);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onActionClick\", function (e) {\n      _this.close();\n\n      if (_this.props.action && typeof _this.props.onActionClick === 'function') {\n        _this.props.onActionClick(e);\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"getInnerRef\", function (el) {\n      return _this.innerEl = el;\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onTouchStart\", function () {\n      _this.clearCloseTimeout();\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onTouchMoveX\", function (event) {\n      var shiftX = event.shiftX,\n          startT = event.startT,\n          originalEvent = event.originalEvent;\n      originalEvent.preventDefault();\n\n      if (!_this.state.touched) {\n        _this.setState({\n          touched: true\n        });\n      }\n\n      _this.shiftXPercent = shiftX / _this.window.innerWidth * 100;\n      _this.shiftXCurrent = (0, _touch.rubber)(_this.shiftXPercent, 72, 1.2, _this.props.platform === _platform.ANDROID);\n      _this.touchStartTime = startT;\n\n      _this.setBodyTransform(_this.shiftXCurrent);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onTouchEnd\", function () {\n      var newState = {\n        touched: false\n      };\n      var callback;\n\n      if (_this.state.touched) {\n        var shiftXReal = _this.shiftXCurrent;\n        var expectTranslateY = shiftXReal / (Date.now() - _this.touchStartTime) * 240 * 0.6 * (_this.shiftXPercent < 0 ? -1 : 1);\n        shiftXReal = shiftXReal + expectTranslateY;\n\n        if (shiftXReal >= 50) {\n          _this.clearCloseTimeout();\n\n          _this.waitTransitionFinish(_this.bodyElRef.current, function () {\n            _this.props.onClose();\n          });\n\n          _this.setBodyTransform(120);\n        } else {\n          callback = function callback() {\n            _this.setCloseTimeout();\n\n            _this.setBodyTransform(0);\n          };\n        }\n      } else {\n        _this.setCloseTimeout();\n      }\n\n      _this.setState(newState, callback);\n    });\n    _this.state = {\n      closing: false,\n      touched: false\n    };\n    _this.bodyElRef = _react.default.createRef();\n    _this.shiftXPercent = 0;\n    _this.shiftXCurrent = 0;\n    _this.touchStartTime = 0;\n    return _this;\n  }\n\n  (0, _createClass2.default)(Snackbar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setCloseTimeout();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.clearCloseTimeout();\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this2 = this;\n\n      this.setState({\n        closing: true\n      });\n      this.waitTransitionFinish(this.innerEl, function () {\n        _this2.props.onClose();\n      });\n    }\n  }, {\n    key: \"waitTransitionFinish\",\n    value: function waitTransitionFinish(element, eventHandler) {\n      if (element) {\n        var eventName = _transitionEvents.default.transitionEndEventName;\n        element.removeEventListener(eventName, eventHandler);\n        element.addEventListener(eventName, eventHandler);\n      }\n    }\n  }, {\n    key: \"setBodyTransform\",\n    value: function setBodyTransform(percent) {\n      var _this3 = this;\n\n      cancelAnimationFrame(this.animationFrame);\n      this.animationFrame = requestAnimationFrame(function () {\n        _this3.bodyElRef.current.style.transform = \"translate3d(\".concat(percent, \"%, 0, 0)\");\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          platform = _this$props.platform,\n          layout = _this$props.layout,\n          action = _this$props.action,\n          before = _this$props.before,\n          after = _this$props.after;\n      var resolvedLayout = after ? 'vertical' : layout;\n      return _react.default.createElement(_FixedLayout.default, {\n        vertical: \"bottom\",\n        className: (0, _classNames.default)((0, _getClassName.default)('Snackbar', platform), className, \"Snackbar--l-\".concat(resolvedLayout), {\n          'Snackbar--closing': this.state.closing,\n          'Snackbar--touched': this.state.touched\n        })\n      }, _react.default.createElement(_Touch.default, {\n        className: \"Snackbar__in\",\n        getRootRef: this.getInnerRef,\n        onStart: this.onTouchStart,\n        onMoveX: this.onTouchMoveX,\n        onEnd: this.onTouchEnd\n      }, _react.default.createElement(\"div\", {\n        className: \"Snackbar__body\",\n        ref: this.bodyElRef\n      }, before && _react.default.createElement(\"div\", {\n        className: \"Snackbar__before\"\n      }, before), _react.default.createElement(\"div\", {\n        className: \"Snackbar__content\"\n      }, _react.default.createElement(\"div\", {\n        className: \"Snackbar__content-text\"\n      }, children), action && _react.default.createElement(\"button\", {\n        className: \"Snackbar__action\",\n        onClick: this.onActionClick\n      }, _react.default.createElement(\"div\", {\n        className: \"Snackbar__action-self\"\n      }, action))), after && _react.default.createElement(\"div\", {\n        className: \"Snackbar__after\"\n      }, after))));\n    }\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.context.window || window;\n    }\n  }]);\n  return Snackbar;\n}(_react.PureComponent);\n\n(0, _defineProperty2.default)(Snackbar, \"defaultProps\", {\n  duration: 4000\n});\n(0, _defineProperty2.default)(Snackbar, \"contextTypes\", {\n  window: _propTypes.default.any,\n  document: _propTypes.default.any\n});\n\nvar _default = (0, _withPlatform.default)(Snackbar);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}